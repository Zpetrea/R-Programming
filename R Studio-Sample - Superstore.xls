Library(tidyverse)
Library(lubridate)
Libaray(ggeasy)
library(readxl)
Sample_Superstore <- read_excel("C:/Users/zacha/Downloads/Sample - Superstore.xls")
View(Sample_Superstore)
head(Sample_Superstore)
str(Sample_Superstore)
summary(Sample_Superstore)
names(Sample_Superstore)
names(Sample_Superstore) <- tolower(names(Sample_Superstore))
names(Sample_Superstore) <- gsub(" ","_", names(Sample_Superstore),)
names(Sample_Superstore) <- sub("-","_", names(Sample_Superstore),)
names(Sample_Superstore)
head(Sample_Superstore)
names(df) <- tolower(names(df))
names(df) <- gsub(" ","_", names(df),)
names(df) <- sub("-","_", names(df),)
names(df)
data_sub <- df %>% select(sub_category, sales, discount, profit)
head(df)
data_sub <- df %>% select(sub_category, sales, discount, profit)
head(data_sub)
data_sub %>% group_by(sub_category) %>% summarise(Total_sales = sum(sales),Total_discount = sum(discount), Total_profit = sum(profit)) %>% arrange(desc(Total_sales))
data_sub$sub_category <- as.factor(data_sub$sub_category)
data_sub %>% group_by(sub_category) %>% summarise(Total_Sales = sum(sales)) %>% ggplot(aes(x = Total_Sales, y = reorder(sub_category, Total_Sales ), fill = Total_Sales)) + geom_col() + labs(x = 'Sub-Category', subtitle = 'The sum of sales for each sub-category',y = 'Sales', title = 'Bar Chart of Sub-category') + theme_classic() + theme(legend.position = 'none', plot.title = element_text(size = 15), axis.text.x = element_blank()) + geom_text(aes(label = prettyNum(Total_Sales, big.mark = ",")), size = 3, hjust = -.1, vjust = .1) + scale_x_continuous(limits = c(0,400000)) + scale_fill_gradient(low = "light blue", high = "blue")
data_sub %>% group_by(sub_category) %>% summarise(Total_Profit = sum(profit)) %>% ggplot(aes(x = Total_Profit, y = reorder(sub_category, Total_Profit ), fill = Total_Profit)) + geom_col() + labs(x = 'Sub-Category', subtitle = 'The sum of profits for each sub-category',y = 'Profits', title = 'Bar Chart of Sub-category and Profits')+ theme_classic() + theme(legend.position = 'none', plot.title = element_text(size = 15)) + scale_fill_gradient(low = "red" ,high = "green")
